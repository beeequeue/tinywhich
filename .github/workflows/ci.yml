name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build

      - run: pnpm publint

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  bench:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./bench

      - run: pnpm run bench

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm typecheck

  test:
    name: test (${{ matrix.runner }}, node v${{ matrix.node }})
    needs: [build]

    strategy:
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
        node: [16, 18, 20, 22, 24]

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: dist

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      # pnpm doesn't support node 16
      - run: npm run test
